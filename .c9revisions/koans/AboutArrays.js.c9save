{"ts":1347316891952,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"describe(\"About Arrays\", function() {\n\n  //We shall contemplate truth by testing reality, via spec expectations.  \n  it(\"should create arrays\", function() {\n    var emptyArray = [];\n    expect(typeof(emptyArray)).toBe(FILL_ME_IN); //A mistake? - http:javascript.crockford.com/remedial.html\n    expect(emptyArray.length).toBe(FILL_ME_IN);\n\n    var multiTypeArray = [0, 1, \"two\", function () { return 3; }, {value1: 4, value2: 5}, [6, 7]];\n    expect(multiTypeArray[0]).toBe(FILL_ME_IN);\n    expect(multiTypeArray[2]).toBe(FILL_ME_IN);\n    expect(multiTypeArray[3]()).toBe(FILL_ME_IN);\n    expect(multiTypeArray[4].value1).toBe(FILL_ME_IN);\n    expect(multiTypeArray[4][\"value2\"]).toBe(FILL_ME_IN);\n    expect(multiTypeArray[5][0]).toBe(FILL_ME_IN);\n  });\n\n  it(\"should understand array literals\", function () {\n    var array = [];\n    expect(array).toEqual([]);\n    \n    array[0] = 1;\n    expect(array).toEqual([1]);\n    \n    array[1] = 2;\n    expect(array).toEqual([1, FILL_ME_IN]);\n    \n    array.push(3);\n    expect(array).toEqual(FILL_ME_IN);\n  });\n\n  it(\"should understand array length\", function () {\n    var fourNumberArray = [1, 2, 3, 4];\n\n    expect(fourNumberArray.length).toBe(FILL_ME_IN);\n    fourNumberArray.push(5, 6);\n    expect(fourNumberArray.length).toBe(FILL_ME_IN);\n\n    var tenEmptyElementArray = new Array(10); \n    expect(tenEmptyElementArray.length).toBe(FILL_ME_IN);\n\n    tenEmptyElementArray.length = 5;\n    expect(tenEmptyElementArray.length).toBe(FILL_ME_IN);\n  });\n\n  it(\"should slice arrays\", function () {\n    var array = [\"peanut\", \"butter\", \"and\", \"jelly\"];\n    \n    expect(array.slice(0, 1)).toEqual(FILL_ME_IN);\n    expect(array.slice(0, 2)).toEqual(FILL_ME_IN);\n    expect(array.slice(2, 2)).toEqual(FILL_ME_IN);\n    expect(array.slice(2, 20)).toEqual(FILL_ME_IN);\n    expect(array.slice(3, 0)).toEqual(FILL_ME_IN);\n    expect(array.slice(3, 100)).toEqual(FILL_ME_IN);\n    expect(array.slice(5, 1)).toEqual(FILL_ME_IN);\n  });\n\n  it(\"should know array references\", function () {\n    var array = [ \"zero\", \"one\", \"two\", \"three\", \"four\", \"five\" ];\n\n    function passedByReference(refArray) {\n        refArray[1] = \"changed in function\";\n    }\n    passedByReference(array);\n    expect(array[1]).toBe(FILL_ME_IN);\n\n    var assignedArray = array;\n    assignedArray[5] = \"changed in assignedArray\";\n    expect(array[5]).toBe(FILL_ME_IN);\n\n    var copyOfArray = array.slice();\n    copyOfArray[3] = \"changed in copyOfArray\";\n    expect(array[3]).toBe(FILL_ME_IN);\n  });\n\n  it(\"should push and pop\", function () {\n    var array = [1, 2];\n    array.push(3);\n\n    expect(array).toEqual(FILL_ME_IN);\n    \n    var poppedValue = array.pop();\n    expect(poppedValue).toBe(FILL_ME_IN);\n    expect(array).toEqual(FILL_ME_IN);\n  });\n\n  it(\"should know about shifting arrays\", function () {\n    var array = [1, 2];\n\n    array.unshift(3);\n    expect(array).toEqual(FILL_ME_IN);\n    \n    var shiftedValue = array.shift();\n    expect(shiftedValue).toEqual(FILL_ME_IN);\n    expect(array).toEqual(FILL_ME_IN);\n  });  \n});\n"]],"start1":0,"start2":0,"length1":0,"length2":3032}]],"length":3032}
{"contributors":[],"silentsave":false,"ts":1347316928123,"patch":[[{"diffs":[[0,")).toBe("],[-1,"FILL_ME_IN"],[1,"\"array\""],[0,"); //A m"]],"start1":210,"start2":210,"length1":26,"length2":23},{"diffs":[[0,"ength).toBe("],[-1,"FILL_ME_IN"],[1,"0"],[0,");\n\n    var "]],"start1":310,"start2":310,"length1":34,"length2":25}]],"length":3020,"saved":false}
{"ts":1347316974635,"patch":[[{"diffs":[[0,").toBe(\""],[-1,"array"],[1,"object"],[0,"\"); //A "]],"start1":211,"start2":211,"length1":21,"length2":22}]],"length":3021,"saved":false}
{"ts":1347317090812,"patch":[[{"diffs":[[0,"ay[0]).toBe("],[-1,"FILL_ME_IN"],[1,"0"],[0,");\n    expec"]],"start1":450,"start2":450,"length1":34,"length2":25},{"diffs":[[0,"ay[2]).toBe("],[-1,"FILL_ME_IN"],[1,"\"two\""],[0,");\n    expec"]],"start1":489,"start2":489,"length1":34,"length2":29},{"diffs":[[0,"[3]()).toBe("],[-1,"FILL_ME_IN"],[1,"3"],[0,");\n    expec"]],"start1":534,"start2":534,"length1":34,"length2":25},{"diffs":[[0,"alue1).toBe("],[-1,"FILL_ME_IN"],[1,"4"],[0,");\n    expec"]],"start1":580,"start2":580,"length1":34,"length2":25},{"diffs":[[0,"ue2\"]).toBe("],[-1,"FILL_ME_IN"],[1,"\"value2\""],[0,");\n    expec"]],"start1":629,"start2":629,"length1":34,"length2":32},{"diffs":[[0,"5][0]).toBe("],[-1,"FILL_ME_IN"],[1,"6"],[0,");\n  });\n\n  "]],"start1":678,"start2":678,"length1":34,"length2":25}]],"length":2978,"saved":false}
{"ts":1347317137511,"patch":[[{"diffs":[[0,").toBe(\""],[-1,"value2\""],[0,");\n    e"]],"start1":634,"start2":634,"length1":23,"length2":16}]],"length":2971,"saved":false}
{"ts":1347317140566,"patch":[[{"diffs":[[0,").toBe(\""],[1,"undefined\""],[0,");\n    e"]],"start1":634,"start2":634,"length1":16,"length2":26}]],"length":2981,"saved":false}
{"ts":1347317193337,"patch":[[{"diffs":[[0,"oBe("],[-1,"\"undefined\""],[1,"5"],[0,");\n "]],"start1":637,"start2":637,"length1":19,"length2":9}]],"length":2971,"saved":false}
{"ts":1347317421570,"patch":[[{"diffs":[[0,"ual([1, "],[-1,"FILL_ME_IN"],[1,"2"],[0,"]);\n    "]],"start1":900,"start2":900,"length1":26,"length2":17},{"diffs":[[0,"ay).toEqual("],[-1,"FILL_ME_IN"],[1,"[1, 2, 3]"],[0,");\n  });\n\n  "]],"start1":951,"start2":951,"length1":34,"length2":33},{"diffs":[[0,"ength).toBe("],[-1,"FILL_ME_IN"],[1,"4"],[0,");\n    fourN"]],"start1":1104,"start2":1104,"length1":34,"length2":25},{"diffs":[[0,"ength).toBe("],[-1,"FILL_ME_IN"],[1,"6"],[0,");\n\n    var "]],"start1":1180,"start2":1180,"length1":34,"length2":25},{"diffs":[[0,"ength).toBe("],[-1,"FILL_ME_IN"],[1,"10"],[0,");\n\n    tenE"]],"start1":1277,"start2":1277,"length1":34,"length2":26},{"diffs":[[0,"ength).toBe("],[-1,"FILL_ME_IN"],[1,"5"],[0,");\n  });\n\n  "]],"start1":1365,"start2":1365,"length1":34,"length2":25},{"diffs":[[0,"1)).toEqual("],[-1,"FILL_ME_IN"],[1,"[\"peanut\"]"],[0,");\n    expec"]],"start1":1515,"start2":1515,"length1":34,"length2":34},{"diffs":[[0,"2)).toEqual("],[-1,"FILL_ME_IN"],[1,"[\"peanut\", \"butter\"]"],[0,");\n    expec"]],"start1":1566,"start2":1566,"length1":34,"length2":44},{"diffs":[[0,"2)).toEqual("],[-1,"FILL_ME_IN"],[1,"[]"],[0,");\n    expec"]],"start1":1627,"start2":1627,"length1":34,"length2":26},{"diffs":[[0,"0)).toEqual("],[-1,"FILL_ME_IN"],[1,"[\"and\", \"jelly\"]"],[0,");\n    expec"]],"start1":1671,"start2":1671,"length1":34,"length2":40},{"diffs":[[0,"0)).toEqual("],[-1,"FILL_ME_IN"],[1,"[]"],[0,");\n    expec"]],"start1":1728,"start2":1728,"length1":34,"length2":26},{"diffs":[[0,"0)).toEqual("],[-1,"FILL_ME_IN"],[1,"[\"jelly\"]"],[0,");\n    expec"]],"start1":1773,"start2":1773,"length1":34,"length2":33},{"diffs":[[0,"1)).toEqual("],[-1,"FILL_ME_IN"],[1,"[]"],[0,");\n  });\n\n  "]],"start1":1823,"start2":1823,"length1":34,"length2":26}]],"length":2917,"saved":false}
